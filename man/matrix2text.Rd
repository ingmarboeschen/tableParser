% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrix2text.R
\name{matrix2text}
\alias{matrix2text}
\title{matrix2text}
\usage{
matrix2text(
  x,
  legend = NULL,
  unifyMatrix = TRUE,
  correctComma = FALSE,
  expandAbbreviations = TRUE,
  superscript2bracket = TRUE,
  standardPcoding = FALSE,
  addDF = TRUE,
  rotate = FALSE,
  split = FALSE
)
}
\arguments{
\item{x}{A character matrix or list of character matrices.}

\item{legend}{A list with table legend codes extracted from table caption and/or footer with tableParser::legendCodings().}

\item{unifyMatrix}{Logical. If TRUE, matrix cells are unified for better post processing.}

\item{correctComma}{Logical. If TRUE and unifyMatrix=TRUE, decimal sign commas are converted to dots.}

\item{expandAbbreviations}{Logical. If TRUE, detected abbreviations are expanded to label detected in table caption/footer with tableParser::legendCodings().}

\item{superscript2bracket}{Logical. If TRUE, detected superscript codings are inserted inside parentheses.}

\item{standardPcoding}{Logical. If TRUE, and no other detection of p-value coding is detected, standard coding of p-values is assumed to be: * p<.05, ** p<.01 and *** p<.001.}

\item{addDF}{Logical. If TRUE, detected sample size N in caption/footer is inserted as degrees of freedom (N-2) to r- and t-values that are reported without degrees of freedom.}

\item{rotate}{Logical. If TRUE, matrix/matrices is rotated before parsing.}

\item{split}{Logical. If TRUE, matrix/matrices are split for multi-model tables.}
}
\value{
Character vector with a parsed and human readable form of the input table. The result vector can be further processed with standardStats() to extract and structure the statistical standard test results only.
}
\description{
Converts character matrices to text.
}
\examples{
# some random data
x<-rnorm(100)
y<-x+rnorm(100)
# a model result table...
mod<-round(summary(lm(y~x))$coefficients,3)
rnames<-c("",rownames(mod))
cnames<-colnames(mod)
mod<-rbind(cnames,mod)
mod<-cbind(rnames,mod)
# ...as character result matrix
x<-unname(mod);x
## parse matrix to text vector
# -as is
matrix2text(x,unifyMatrix=FALSE)
# -with unified content
matrix2text(x,unifyMatrix=TRUE)
## processing of a matrix with two header lines
x<-rbind(c("","A","A","B","B"),x);x
matrix2text(x,unifyMatrix=FALSE)
## processing of a matrix with two header lines and naming columns 
x<-cbind(c("","","C","D"),x);x
matrix2text(x,unifyMatrix=FALSE)
}
